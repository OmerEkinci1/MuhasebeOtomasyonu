<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnStokSec.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XTHjt4MAAAAASUVORK5CYII=
</value>
  </data>
</root>